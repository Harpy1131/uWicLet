javascript:(function(){  
    let today=new Date(),isAprilFools=today.getMonth()===2&&today.getDate()===1,platform=navigator.platform.toUpperCase(),deviceType="UNKNOWN DEVICE";  
    if(platform.includes("MAC"))deviceType="MAC";  
    else if(platform.includes("WIN"))deviceType="WINDOWS MACHINE";  
    else if(platform.includes("CR"))deviceType="CHROMEBOOK";  
    console.log(`The date is ${today.toDateString()}`);  
    console.log(`This device is a ${deviceType}`);  
    console.log(`It IS${isAprilFools?"":" NOT"} April 1st`);  
    console.log(`Prank is ${isAprilFools&&deviceType!=="MAC"?"ENABLED":"DISABLED"}`);  
    if(!isAprilFools||deviceType==="MAC")return;  
    document.addEventListener("click",function(e){  
        if(e.target.tagName==="A"&&Math.random()<0.1){  
            e.preventDefault();  
            document.body.innerHTML="";  
            document.body.style.background="repeating-linear-gradient(0deg,#ff00ff,#ff00ff 40px,#000000 40px,#000000 80px),repeating-linear-gradient(90deg,#ff00ff,#ff00ff 40px,#000000 40px,#000000 80px),repeating-linear-gradient(90deg,rgba(0,0,0,0.3),rgba(0,0,0,0.3) 2px,transparent 2px,transparent 4px)";  
            document.body.style.width="100vw";  
            document.body.style.height="100vh";  
            document.body.style.margin="0";  
            document.body.style.display="flex";  
            document.body.style.alignItems="center";  
            document.body.style.justifyContent="center";  
            let errorCode="CB-"+btoa(window.location.hostname).slice(0,6).toUpperCase();  
            alert(`Chromebrew encountered a fatal error.\n\nError Code: ${errorCode}\n\nRoot Cause: WebGL pipeline corruption detected. Chromium's GPU process was unable to safely allocate a shader buffer, leading to an unrecoverable state.\n\nThe contents of this page have been forcibly terminated to prevent graphical inconsistencies.`);  
        }  
    });  
    function slowScroll(){window.scrollBy(0,0.5);setTimeout(slowScroll,200);}  
    slowScroll();  
    window.addEventListener("wheel",function(e){e.preventDefault();window.scrollBy(0,-e.deltaY);},{passive:!1});  
    document.title="";  
    document.querySelectorAll('link[rel="icon"],link[rel="shortcut icon"],link[rel="apple-touch-icon"]').forEach(link=>link.remove());  
})();